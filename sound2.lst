     1                                  [org 0x0100]
     2                                  section .text
     3 00000000 EB34                    jmp start
     4 00000002 56                      timer:		push si
     5 00000003 50                      			push ax
     6 00000004 52                      			push dx
     7 00000005 06                      			push es
     8 00000006 8B16[0400]              			mov dx,[sound_buffer]
     9 0000000A 8EC2                    			mov es,dx
    10                                  			;send DSP command 10h
    11 0000000C BA2C02                  			mov dx, 22ch
    12 0000000F B010                    			mov al,10h
    13 00000011 EE                      			out dx,al
    14                                  			;send byte audio sample
    15 00000012 8B36[0600]              			mov si, [sound_index]
    16 00000016 268A04                  			mov al,[es:si]
    17 00000019 EE                      			out dx,al
    18 0000001A 8306[0600]01            			add word[sound_index],1
    19 0000001F 813E[0600]50C3          			cmp word[sound_index], 50000
    20 00000025 7506                    			jne timerskip
    21 00000027 C706[0600]0000          			mov word[sound_index],0
    22                                  			timerskip:
    23 0000002D 07                      			pop es
    24 0000002E 5A                      			pop dx
    25 0000002F 58                      			pop ax
    26 00000030 5E                      			pop si
    27 00000031 2EFF2E[0000]            			jmp far [cs:timerinterrupt]
    28                                  start:
    29 00000036 FA                      cli
    30                                  			;read sound data from file and store in sound_buffer segment
    31 00000037 B43D                    		mov ah,3dh ; open file
    32 00000039 B000                    		mov al,0
    33 0000003B 8D16[0800]              		lea dx,filename
    34 0000003F CD21                    		int 21h
    35 00000041 A3[1300]                		mov [filehandle],ax
    36                                  		;read file and write bytes to 
    37 00000044 B43F                    		mov ah,3fh
    38 00000046 B950C3                  		mov cx,50000
    39 00000049 8B1E[1300]              		mov bx,[filehandle]
    40 0000004D 8B16[0400]              		mov dx,[sound_buffer]
    41 00000051 8EDA                    		mov ds,dx
    42 00000053 31D2                    		xor dx,dx
    43 00000055 CD21                    		int 21h
    44                                  		;close file
    45 00000057 8CC8                    		mov ax,cs
    46 00000059 8ED8                    		mov ds,ax
    47 0000005B B43E                    		mov ah,3eh
    48 0000005D 8B1E[1300]              		mov bx,[filehandle]
    49 00000061 CD21                    		int 21h
    50 00000063 31C0                    		xor ax, ax
    51 00000065 8EC0                    		mov es, ax					; es=0, point es to IVT base
    52 00000067 26A17000                		mov ax,[es:1ch*4]
    53 0000006B A3[0000]                		mov word [timerinterrupt],ax
    54 0000006E 26A17200                		mov ax,[es:1ch*4+2]
    55 00000072 A3[0200]                		mov word [timerinterrupt+2],ax
    56 00000075 26C7067000[0200]        		mov word[es:1ch*4],timer
    57 0000007C 268C0E7200              		mov [es:1ch*4+2],cs
    58 00000081 B036                    		mov al, 0x36    ; Set the command byte for Channel 0, 16-bit binary, square wave
    59 00000083 E643                    		out 0x43, al    ; Send the command byte
    60 00000085 B85401                  		mov ax, 340    ; Set the desired frequency
    61 00000088 E640                    		out 0x40, al    ; Send the low byte of the divisor
    62 0000008A 88E0                    		mov al, ah      ; Get the high byte of the divisor
    63 0000008C E640                    		out 0x40, al    ; Send the high byte of the divisor
    64 0000008E 31FF                    		xor di,di
    65 00000090 B800A0                  		mov ax,0xA000
    66 00000093 8EC0                    		mov es,ax
    67 00000095 B81300                  		mov ax,13h
    68 00000098 CD10                    		int 0x10
    69 0000009A FB                      sti
    70                                  loop1:
    71 0000009B B80500                  	 mov ax,5
    72 0000009E 01C3                    	 add bx,ax
    73 000000A0 EBF9                         jmp loop1
    74                                  
    75 000000A2 FA                      cli	
    76 000000A3 31C0                    		xor ax,ax
    77 000000A5 8EC0                    		mov es,ax
    78 000000A7 A1[0000]                		mov ax,[timerinterrupt]
    79 000000AA 26A37000                		mov word [es:1ch*4],ax
    80 000000AE A1[0200]                		mov ax,[timerinterrupt+2]
    81 000000B1 26A37200                		mov word [es:1ch*4+2],ax
    82 000000B5 FB                      sti
    83 000000B6 B8004C                  mov ax,0x4c00
    84 000000B9 CD21                    int 0x21
    85                                  	
    86                                  section .data
    87 00000000 00000000                timerinterrupt:dw 0,0
    88 00000004 401F                    sound_buffer: dw 8000
    89 00000006 0000                    sound_index: dw 0
    90 00000008 6B696E6773762E7761-     filename: db 'kingsv.wav',0
    90 00000011 7600               
    91 00000013 0000                    filehandle: dw 0
